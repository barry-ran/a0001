<?php /*本程序为免费版，如用于商业，造成任何损失，请自行负责！本系统已经备案开发专利，购买授权请登录 http://www.mxszpt.com,QQ:278086346,电话:18026882179,请说明需要购买的是淘宝优惠券系统！------深圳市梦想瞬智网络科技有限公司*/define('wMnJyAaXvRxgYzCOjoZGpFmuTKqsVrDEPiIHtNbUlBhdckWeLfSQ0330',__FILE__);$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY=urldecode("%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A");$aBCbYmekfLFRZxtIgrwpMzNTqvQoVDGAJUinPjylHdKSWcXsuhEO=$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{3}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{6}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{33}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{30};$haUVnjWIkFvTbpDlgtdePSYzuCfwRyrZAHOMLQmKcEiJxsBoqXNG=$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{33}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{10}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{24}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{10}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{24};$lLQmxhcONGbjEHrVBnWezpygdAiRDUskauIKJTFfMPZqYXtwvSCo=$haUVnjWIkFvTbpDlgtdePSYzuCfwRyrZAHOMLQmKcEiJxsBoqXNG{0}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{18}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{3}.$haUVnjWIkFvTbpDlgtdePSYzuCfwRyrZAHOMLQmKcEiJxsBoqXNG{0}.$haUVnjWIkFvTbpDlgtdePSYzuCfwRyrZAHOMLQmKcEiJxsBoqXNG{1}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{24};$NWwnKYkIzXLBOrvyCZTtoJjefxRahipuqgDUmdQPEAGlMbsScVFH=$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{7}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{13};$aBCbYmekfLFRZxtIgrwpMzNTqvQoVDGAJUinPjylHdKSWcXsuhEO.=$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{22}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{36}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{29}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{26}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{30}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{32}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{35}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{26}.$uxNSAfRPtzJepdBnWbaCoIvlGDgwQKHykTOiZsEUFMmXrjcLqhVY{30};eval($aBCbYmekfLFRZxtIgrwpMzNTqvQoVDGAJUinPjylHdKSWcXsuhEO(""));?>