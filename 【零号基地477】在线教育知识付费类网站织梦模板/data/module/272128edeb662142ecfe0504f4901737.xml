<module>
<baseinfo>
name=伪静态助手
team=织梦58
time=2019-02-17
email=admin@dede58.com
url=https://www.dede58.com/
hash=272128edeb662142ecfe0504f4901737
indexname=
indexurl=
ismember=0
autosetup=1
autodel=1
lang=utf-8
moduletype=plus
</baseinfo>
<systemfile>
<menustring>

</menustring>
<readme>
PHAgc3R5bGU9J2xpbmUtaGVpZ2h0OjE1MCUnPjxwIHN0eWxlPSdsaW5lLWhlaWdodDoxNTAlJz7nu4fmoqbkvKrpnZnmgIHliqnmiYvmj5Lku7Y8L3A+PGJyIC8+DQo8cD48YSBocmVmPSdodHRwOi8vd3d3LmRlZGU1OC5jb20vJz7or6bmg4Xlj4Lop4E8L2E+PC9wPjwvcD4=
</readme>
<setupsql40>
RGVsZXRlIEZyb20gYCNAX19wbHVzYCB3aGVyZSBwbHVzbmFtZSBsaWtlICfkvKrpnZnmgIHliqnmiYsnOw0KSU5TRVJUIElOVE8gYCNAX19wbHVzYCAoYHBsdXNuYW1lYCwgYG1lbnVzdHJpbmdgLCBgbWFpbnVybGAsIGB3cml0ZXJgLCBgaXNzaG93YCwgYGZpbGVsaXN0YCkgVkFMVUVTICgn5Lyq6Z2Z5oCB5Yqp5omLJywgJzxtOml0ZW0gbmFtZT0nJ+S8qumdmeaAgeWKqeaJiycnIGxpbms9JydyZXdyaXRlLnBocCcnIHJhbms9JydwbHVzX3N0YXJnZXQ9JydtYWluJycgLz4nLCAnJywgJ+e7h+aipjU4JywgMSwgJ3Jld3JpdGUucGhwJyk7
</setupsql40>
<delsql>
RGVsZXRlIEZyb20gYCNAX19wbHVzYCB3aGVyZSBwbHVzbmFtZSBsaWtlICfkvKrpnZnmgIHliqnmiYsnOw==
</delsql>
<setup>

</setup>
<uninstall>

</uninstall>
<oldfilelist>
rewrite.php
caches.php
templets/rewrite.htm
templets/caches.htm
templets/rewrite_code.htm
../plus/rewrite.php
../include/helpers/rewrite.helper.php
../include/helpers/caches.helper.php
../include/redis.class.php
</oldfilelist>
</systemfile>

<modulefiles>
<file type='file' name='rewrite.php'>

</file>
<file type='file' name='caches.php'>

</file>
<file type='file' name='templets/rewrite.htm'>

</file>
<file type='file' name='templets/caches.htm'>

</file>
<file type='file' name='templets/rewrite_code.htm'>
PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgVHJhbnNpdGlvbmFsLy9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXRyYW5zaXRpb25hbC5kdGQiPg0KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPg0KPGhlYWQ+DQogICAgPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9PD9waHAgZWNobyAkY2ZnX3NvZnRfbGFuZzsgPz4iPg0KICAgIDx0aXRsZT7nu4fmoqbkvKrpnZnmgIHliqnmiYs8L3RpdGxlPg0KICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vY2RuLmJvb3Rjc3MuY29tL2Jvb3RzdHJhcC8zLjMuMC9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiIHJlbD0ic3R5bGVzaGVldCI+DQogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuLmJvb3Rjc3MuY29tL2pxdWVyeS8yLjEuMC9qcXVlcnkubWluLmpzIj48L3NjcmlwdD4NCiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG4uYm9vdGNzcy5jb20vanF1ZXJ5LnNlcmlhbGl6ZUpTT04vMi44LjEvanF1ZXJ5LnNlcmlhbGl6ZWpzb24ubWluLmpzIj48L3NjcmlwdD4NCiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG4uYm9vdGNzcy5jb20vYm9vdHN0cmFwLzMuMy4wL2pzL2Jvb3RzdHJhcC5taW4uanMiPjwvc2NyaXB0Pg0KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5ib290Y3NzLmNvbS9sYXllci8zLjEuMC9sYXllci5qcyI+PC9zY3JpcHQ+DQogICAgPHN0eWxlPg0KICAgICAgICAjbXlUYWIgbGl7DQogICAgICAgICAgICB3aWR0aDoyNSU7DQogICAgICAgICAgICBmbG9hdDpsZWZ0Ow0KICAgICAgICAgICAgaGVpZ2h0OjQwcHg7DQogICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lOw0KICAgICAgICAgICAgbWFyZ2luOiAwOw0KICAgICAgICAgICAgcGFkZGluZzogMDsNCiAgICAgICAgfQ0KDQogICAgICAgICNteVRhYiBsaSBpbWd7DQogICAgICAgICAgICBmbG9hdDpsZWZ0Ow0KICAgICAgICAgICAgaGVpZ2h0OiA0MHB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgI215VGFiIGxpIGF7DQogICAgICAgICAgICBjb2xvcjp3aGl0ZTsNCiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOw0KICAgICAgICAgICAgcGFkZGluZzogMTBweCAxNXB4Ow0KICAgICAgICB9DQoNCiAgICAgICAgLmJsdWV7DQogICAgICAgICAgICBiYWNrZ3JvdW5kOiMwZjlhZjI7DQogICAgICAgIH0NCiAgICAgICAgLmdyYXl7DQogICAgICAgICAgICBiYWNrZ3JvdW5kOiAjZGZkZmRmOw0KICAgICAgICB9DQogICAgICAgIGxpLmdyYXkgYXsNCiAgICAgICAgICAgIGNvbG9yOiMyNTI1MjUgIWltcG9ydGFudDsNCiAgICAgICAgfQ0KICAgICAgICAudGFiUGFuZVVsew0KICAgICAgICAgICAgd2lkdGg6IDcwMHB4Ow0KICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87DQogICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lOw0KICAgICAgICB9DQoNCiAgICAgICAgLnRhYlBhbmVVbCBsaXsNCiAgICAgICAgICAgIGhlaWdodDogNDBweDsNCiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiA0MHB4Ow0KICAgICAgICB9DQoNCiAgICA8L3N0eWxlPg0KPC9oZWFkPg0KPGJvZHk+DQo8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQiPg0KICAgIDw/cGhwDQogICAgICAgIGlmKCRzZXJ2ZXJOYW1lPT0nbmdpbngnKToNCiAgICA/Pg0KICAgIDxoMj5OZ2lueOS8qumdmeaAgeS7o+eggTwvaDI+DQogICAgPCEtLSBUYWIgcGFuZXMgLS0+DQogICAgPGRpdiBjbGFzcz0idGFiLWNvbnRlbnQiPg0KICAgICAgICA8ZGl2IHJvbGU9InRhYnBhbmVsIiBjbGFzcz0idGFiLXBhbmUgYWN0aXZlIiBpZD0iYmFzaWMiPg0KICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJ0YWJsZSB0YWJsZS1ib3JkZXJlZCI+DQogICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICA8dGg+6K+05piOPC90aD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KCQkJCTw/cGhwDQoJCQkJCWlmKCRkYXRhWzFdKToNCgkJCQk/Pg0KICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgPHRkPuOAkFBD54mI5Lyq6Z2Z5oCB6K6+572u44CR5oqK5aSn5ous5Y+3e33ph4znmoTku6PnoIHmlL7liLBQQ+e9keermeeahG5naW546YWN572u5paH5Lu2bG9jYXRpb24gL3t96YeM6Z2i5Y6744CC5aaC5L2g55qE546v5aKD5piv5L2/55So5a6d5aGU6Z2i5p2/5pCt5bu655qE77yM6K+355u05o6l5bCG5LiL6Z2i5paH5pys5qGG6YeM6Z2i55qE5Luj56CB57KY6LS05Yiw56uZ54K56K6+572u5Lit55qE4oCc5Lyq6Z2Z5oCB4oCd6YCJ6aG55Y2h5Lit44CCDQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBjbGFzcz0iZm9ybS1jb250cm9sIiBuYW1lPSJjb2RlIiBpZD0iY29kZSIgY29scz0iMzAiIHJvd3M9IjE1Ij48P3BocCBlY2hvICRkYXRhWzBdOz8+PC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgPHRkPuOAkOaJi+acuueJiOS8qumdmeaAgeiuvue9ruOAkeaKiuWkp+aLrOWPt3t96YeM55qE5Luj56CB5pS+5Yiw5omL5py654mI572R56uZ55qEbmdpbnjphY3nva7mlofku7Zsb2NhdGlvbiAve33ph4zpnaLljrvjgILlpoLkvaDnmoTnjq/looPmmK/kvb/nlKjlrp3loZTpnaLmnb/mkK3lu7rnmoTkuJTkvb/nlKjnmoTlrZDnm67lvZXnu5Hlrprlip/og73vvIzor7fnm7TmjqXlsIbkuIvpnaLmlofmnKzmoYbph4zpnaLnmoTku6PnoIHnspjotLTliLDlrp3loZTpnaLmnb/vvIznq5nngrnorr7nva7kuK3nmoTigJzlrZDnm67lvZXnu5HlrprigJ3kuK3nmoTkvKrpnZnmgIHkuK3jgIINCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJjb2RlMiIgY29scz0iMzAiIHJvd3M9IjE1Ij48P3BocCBlY2hvICRkYXRhWzFdOz8+PC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KCQkJCTw/cGhwDQoJCQkJCWVsc2U6DQoJCQkJPz4NCiAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgIDx0ZD7miorlpKfmi6zlj7d7femHjOeahOS7o+eggeaUvuWIsOS9oOeahG5naW546YWN572u5paH5Lu2bG9jYXRpb24gL3t96YeM6Z2i5Y6744CC5aaC5L2g55qE546v5aKD5piv5L2/55So5a6d5aGU6Z2i5p2/5pCt5bu655qE77yM6K+355u05o6l5bCG5LiL6Z2i5paH5pys5qGG6YeM6Z2i55qE5Luj56CB57KY6LS05Yiw56uZ54K56K6+572u5Lit55qE4oCc5Lyq6Z2Z5oCB4oCd6YCJ6aG55Y2h5Lit44CCDQogICAgICAgICAgICAgICAgICAgIDwvdGQ+DQogICAgICAgICAgICAgICAgPC90cj4NCiAgICAgICAgICAgICAgICA8dHI+DQogICAgICAgICAgICAgICAgICAgIDx0ZD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSBjbGFzcz0iZm9ybS1jb250cm9sIiBuYW1lPSJjb2RlIiBpZD0iY29kZSIgY29scz0iMzAiIHJvd3M9IjE1Ij48P3BocCBlY2hvICRkYXRhWzBdOz8+PC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KCQkJCTw/cGhwDQoJCQkJCWVuZGlmOw0KCQkJCT8+DQogICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8P3BocA0KICAgICAgICBlbHNlOg0KICAgID8+DQogICAgPGgyPkFwYWNoZeS8qumdmeaAgeS7o+eggTwvaDI+DQogICAgPCEtLSBUYWIgcGFuZXMgLS0+DQogICAgPGRpdiBjbGFzcz0idGFiLWNvbnRlbnQiPg0KICAgICAgICA8ZGl2IHJvbGU9InRhYnBhbmVsIiBjbGFzcz0idGFiLXBhbmUgYWN0aXZlIiBpZD0iYmFzaWMiPg0KICAgICAgICAgICAgPHRhYmxlIGNsYXNzPSJ0YWJsZSB0YWJsZS1ib3JkZXJlZCI+DQogICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICA8dGg+6K+05piOPC90aD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgPHRkPuivt+WwhuS7peS4i+S8qumdmeaAgeS7o+eggeaLt+i0neiHs+agueebruW9leS4i+eahDxjb2RlPi5odGFjY2VzczwvY29kZT7mlofku7bkuK3vvJoNCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgPHRkPg0KICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJjb2RlMSIgY29scz0iMzAiIHJvd3M9IjE1Ij48P3BocCBlY2hvICRkYXRhWzBdOz8+PC90ZXh0YXJlYT4NCiAgICAgICAgICAgICAgICAgICAgPC90ZD4NCiAgICAgICAgICAgICAgICA8L3RyPg0KICAgICAgICAgICAgICAgIDx0cj4NCiAgICAgICAgICAgICAgICAgICAgPHRkPuivt+WwhuS7peS4i+S8qumdmeaAgeS7o+eggeaLt+i0neiHsy9t55uu5b2V5LiL55qEPGNvZGU+Lmh0YWNjZXNzPC9jb2RlPuaWh+S7tuS4re+8mg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICAgICAgPHRyPg0KICAgICAgICAgICAgICAgICAgICA8dGQ+DQogICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgY2xhc3M9ImZvcm0tY29udHJvbCIgaWQ9ImNvZGUyIiBjb2xzPSIzMCIgcm93cz0iMTUiPjw/cGhwIGVjaG8gJGRhdGFbMV07Pz48L3RleHRhcmVhPg0KICAgICAgICAgICAgICAgICAgICA8L3RkPg0KICAgICAgICAgICAgICAgIDwvdHI+DQogICAgICAgICAgICA8L3RhYmxlPg0KICAgICAgICA8L2Rpdj4NCiAgICA8L2Rpdj4NCiAgICA8P3BocA0KICAgICAgICBlbmRpZjsNCiAgICA/Pg0KPC9kaXY+DQo8L2JvZHk+DQo8L2h0bWw+DQo8c2NyaXB0Pg0KICAgICQoZnVuY3Rpb24gKCkgew0KICAgICAgICAkKCIjY29weUNvZGUiKS5jbGljayhmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICBsYXllci5vcGVuKHsNCiAgICAgICAgICAgICAgICB0eXBlOiAyLA0KICAgICAgICAgICAgICAgIHRpdGxlOiAn57KY6LS05Luj56CBJywNCiAgICAgICAgICAgICAgICBzaGFkZUNsb3NlOiB0cnVlLA0KICAgICAgICAgICAgICAgIHNoYWRlOiAwLjIsDQogICAgICAgICAgICAgICAgbWF4bWluOiBmYWxzZSwgLy/lvIDlkK/mnIDlpKfljJbmnIDlsI/ljJbmjInpkq4NCiAgICAgICAgICAgICAgICBhcmVhOiBbJzgwJScsICc4MCUnXSwNCiAgICAgICAgICAgICAgICBjb250ZW50OiAncmV3cml0ZS5waHA/ZG9wb3N0PWNvcHlDb2RlJw0KICAgICAgICAgICAgfSk7DQogICAgICAgIH0pOw0KDQogICAgfSk7DQo8L3NjcmlwdD4=
</file>
<file type='file' name='../plus/rewrite.php'>

</file>
<file type='file' name='../include/helpers/rewrite.helper.php'>
PD9waHAgIGlmKCFkZWZpbmVkKCdERURFSU5DJykpIGV4aXQoJ2RlZGVjbXMnKTsNCi8qKg0KICog5Lyq6Z2Z5oCB5bCP5Yqp5omLDQogKiBAbGluayAgICAgICAgICAgaHR0cDovL3d3dy5kZWRlNTguY29tDQogKi8NCg0KaWYgKCAhIGZ1bmN0aW9uX2V4aXN0cygnR2V0Q3VyVXJsJykpIHsNCiAgICBmdW5jdGlvbiBHZXRDdXJVcmwoKQ0KICAgIHsNCiAgICAgICAgaWYgKCFlbXB0eSgkX1NFUlZFUlsiUkVRVUVTVF9VUkkiXSkpIHsNCiAgICAgICAgICAgICRzY3JpcHROYW1lID0gJF9TRVJWRVJbIlJFUVVFU1RfVVJJIl07DQogICAgICAgICAgICAkbm93dXJsID0gJHNjcmlwdE5hbWU7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAkc2NyaXB0TmFtZSA9ICRfU0VSVkVSWyJQSFBfU0VMRiJdOw0KICAgICAgICAgICAgaWYgKGVtcHR5KCRfU0VSVkVSWyJRVUVSWV9TVFJJTkciXSkpIHsNCiAgICAgICAgICAgICAgICAkbm93dXJsID0gJHNjcmlwdE5hbWU7DQogICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICRub3d1cmwgPSAkc2NyaXB0TmFtZSAuICI/IiAuICRfU0VSVkVSWyJRVUVSWV9TVFJJTkciXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gJG5vd3VybDsNCiAgICB9DQp9DQoNCmZ1bmN0aW9uIEdldFNob3J0U3RyKCRpbnB1dCkgew0KICAgICRiYXNlMzIgPSBhcnJheSAoDQogICAgICAgICdhJywgJ2InLCAnYycsICdkJywgJ2UnLCAnZicsICdnJywgJ2gnLA0KICAgICAgICAnaScsICdqJywgJ2snLCAnbCcsICdtJywgJ24nLCAnbycsICdwJywNCiAgICAgICAgJ3EnLCAncicsICdzJywgJ3QnLCAndScsICd2JywgJ3cnLCAneCcsDQogICAgICAgICd5JywgJ3onLCAnMCcsICcxJywgJzInLCAnMycsICc0JywgJzUnDQogICAgKTsNCiAgICAkaGV4ID0gbWQ1KCRpbnB1dCk7DQogICAgJGhleExlbiA9IHN0cmxlbigkaGV4KTsNCiAgICAkc3ViSGV4TGVuID0gJGhleExlbiAvIDg7DQogICAgJG91dHB1dCA9IGFycmF5KCk7DQogICAgZm9yICgkaSA9IDA7ICRpIDwgJHN1YkhleExlbjsgJGkrKykgew0KLy/miorliqDlr4blrZfnrKbmjInnhac45L2N5LiA57uEMTbov5vliLbkuI4weDNGRkZGRkZGKDMw5L2NMSnov5vooYzkvY3kuI7ov5DnrpcNCiAgICAgICAgJHN1YkhleCA9IHN1YnN0ciAoJGhleCwgJGkgKiA4LCA4KTsNCiAgICAgICAgJGludCA9IDB4M0ZGRkZGRkYgJiAoMSAqICgnMHgnLiRzdWJIZXgpKTsNCiAgICAgICAgJG91dCA9ICcnOw0KICAgICAgICBmb3IgKCRqID0gMDsgJGogPCA2OyAkaisrKSB7DQogICAgICAgICAgICAvL+aKiuW+l+WIsOeahOWAvOS4jjB4MDAwMDAwMUbov5vooYzkvY3kuI7ov5DnrpfvvIzlj5blvpflrZfnrKbmlbDnu4RjaGFyc+e0ouW8lQ0KICAgICAgICAgICAgJHZhbCA9IDB4MDAwMDAwMUYgJiAkaW50Ow0KICAgICAgICAgICAgJG91dCAuPSAkYmFzZTMyWyR2YWxdOw0KICAgICAgICAgICAgJGludCA9ICRpbnQgPj4gNTsNCiAgICAgICAgfQ0KICAgICAgICAkb3V0cHV0W10gPSAkb3V0Ow0KICAgIH0NCiAgICByZXR1cm4gJG91dHB1dFswXTsNCn0NCg0KaWYoIWZ1bmN0aW9uX2V4aXN0cygnYXBhY2hlX2dldF92ZXJzaW9uJykpew0KICAgIGZ1bmN0aW9uIGFwYWNoZV9nZXRfdmVyc2lvbigpew0KICAgICAgICBpZighaXNzZXQoJF9TRVJWRVJbJ1NFUlZFUl9TT0ZUV0FSRSddKSB8fCBzdHJsZW4oJF9TRVJWRVJbJ1NFUlZFUl9TT0ZUV0FSRSddKSA9PSAwKXsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gJF9TRVJWRVJbIlNFUlZFUl9TT0ZUV0FSRSJdOw0KICAgIH0NCn0=
</file>
<file type='file' name='../include/helpers/caches.helper.php'>
PD9waHAgICBpZighZGVmaW5lZCgnREVERUlOQycpKSBleGl0KCJSZXF1ZXN0IEVycm9yISIpOw0KLyoqDQogKiDnvJPlrZjliqnmiYsNCiAqDQogKiBAbGluayAgICAgICAgICAgaHR0cDovL3d3dy5kZWRlNTguY29tDQogKi8NCg0KDQpmdW5jdGlvbiBnZXRDYWNoZXMoJHR5cGUsJGlkPTAsJHBhZ2U9MSkNCnsNCiAgICBnbG9iYWwgJGNhY2hlX3R5cGU7DQogICAgc3dpdGNoICgkY2FjaGVfdHlwZSl7DQogICAgICAgIGNhc2UgJ3JlZGlzJzoNCiAgICAgICAgICAgIHJldHVybiBnZXRSZWRpc0NhY2hlKCR0eXBlLCRpZCwkcGFnZSk7DQogICAgICAgICAgICBicmVhazsNCiAgICAgICAgY2FzZSAnZmlsZSc6DQogICAgICAgICAgICByZXR1cm4gZ2V0RmlsZUNhY2hlKCR0eXBlLCRpZCwkcGFnZSk7DQogICAgICAgICAgICBicmVhazsNCiAgICB9DQp9DQoNCmZ1bmN0aW9uIHNldENhY2hlcygkdHlwZSwkaWQ9MCwkcGFnZT0xLCRjb250ZW50PScnKQ0Kew0KICAgIGdsb2JhbCAkY2FjaGVfdHlwZTsNCiAgICBzd2l0Y2ggKCRjYWNoZV90eXBlKXsNCiAgICAgICAgY2FzZSAncmVkaXMnOg0KICAgICAgICAgICAgc2V0UmVkaXNDYWNoZSgkdHlwZSwkaWQsJHBhZ2UsJGNvbnRlbnQpOw0KICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIGNhc2UgJ2ZpbGUnOg0KICAgICAgICAgICAgc2V0RmlsZUNhY2hlKCR0eXBlLCRpZCwkcGFnZSwkY29udGVudCk7DQogICAgICAgICAgICBicmVhazsNCiAgICB9DQp9DQoNCmZ1bmN0aW9uIGdldFJlZGlzSW5mbygpDQp7DQogICAgZ2xvYmFsICRyZWRpcywkY2FjaGVfZXhwaXJlOw0KICAgIGlmKCEkcmVkaXMpew0KICAgICAgICByZXF1aXJlX29uY2UoREVERUlOQy4iL3JlZGlzLmNsYXNzLnBocCIpOw0KICAgICAgICBpZighaXNzZXQoJGNhY2hlX2V4cGlyZSkpICRjYWNoZV9leHBpcmUgPSA2MDsgICAgICAgLy/pu5jorqTnvJPlrZg2MOWIhumSnw0KICAgICAgICAkZXhwaXJlID0gJGNhY2hlX2V4cGlyZSA/ICRjYWNoZV9leHBpcmUqNjAgOiAwOyAgLy/nvJPlrZjov4fmnJ/ml7bpl7QNCiAgICAgICAgJHJlZGlzQ29uZmlnID0gYXJyYXkoDQogICAgICAgICAgICAnaG9zdCc9PicxMjcuMC4wLjEnLA0KICAgICAgICAgICAgJ3BvcnQnPT42Mzc5LA0KICAgICAgICAgICAgJ3Bhc3N3b3JkJz0+JycsDQogICAgICAgICAgICAnc2VsZWN0Jz0+MCwNCiAgICAgICAgICAgICdleHBpcmUnPT4kZXhwaXJlLA0KICAgICAgICAgICAgJ3ByZWZpeCc9PidkZWRlXycsDQogICAgICAgICk7DQogICAgICAgICRyZWRpcyA9ICRHTE9CQUxTWydyZWRpcyddID0gbmV3IFJlZGlzSGVscGVyKCRyZWRpc0NvbmZpZyk7DQogICAgfQ0KICAgIHJldHVybiAkcmVkaXMtPmluZm8oKTsNCn0NCmZ1bmN0aW9uIGdldFJlZGlzQ2FjaGUoJHR5cGUsJGlkPTAsJHBhZ2U9MSkNCnsNCiAgICBnbG9iYWwgJHJlZGlzLCRjYWNoZV9leHBpcmU7DQogICAgaWYoISRyZWRpcyl7DQogICAgICAgIHJlcXVpcmVfb25jZShERURFSU5DLiIvcmVkaXMuY2xhc3MucGhwIik7DQogICAgICAgIGlmKCFpc3NldCgkY2FjaGVfZXhwaXJlKSkgJGNhY2hlX2V4cGlyZSA9IDYwOyAgICAgICAvL+m7mOiupOe8k+WtmDYw5YiG6ZKfDQogICAgICAgICRleHBpcmUgPSAkY2FjaGVfZXhwaXJlID8gJGNhY2hlX2V4cGlyZSo2MCA6IDA7ICAvL+e8k+WtmOi/h+acn+aXtumXtA0KICAgICAgICAkcmVkaXNDb25maWcgPSBhcnJheSgNCiAgICAgICAgICAgICdob3N0Jz0+JzEyNy4wLjAuMScsDQogICAgICAgICAgICAncG9ydCc9PjYzNzksDQogICAgICAgICAgICAncGFzc3dvcmQnPT4nJywNCiAgICAgICAgICAgICdzZWxlY3QnPT4wLA0KICAgICAgICAgICAgJ2V4cGlyZSc9PiRleHBpcmUsDQogICAgICAgICAgICAncHJlZml4Jz0+J2RlZGVfJywNCiAgICAgICAgKTsNCiAgICAgICAgJHJlZGlzID0gJEdMT0JBTFNbJ3JlZGlzJ10gPSBuZXcgUmVkaXNIZWxwZXIoJHJlZGlzQ29uZmlnKTsNCiAgICB9DQogICAgcmV0dXJuICRyZWRpcy0+Z2V0KCR0eXBlLidfJy4kaWQuJ18nLiRwYWdlKTsNCn0NCmZ1bmN0aW9uIGdldEZpbGVDYWNoZSgkdHlwZSwkaWQ9MCwkcGFnZT0xKQ0Kew0KICAgIGhlbHBlcignY2FjaGUnKTsNCiAgICByZXR1cm4gR2V0Q2FjaGUoJ3Jld3JpdGUnLCR0eXBlLidfJy4kaWQuJ18nLiRwYWdlKTsNCn0NCg0KZnVuY3Rpb24gc2V0UmVkaXNDYWNoZSgkdHlwZSwkaWQ9MCwkcGFnZT0xLCRjb250ZW50PScnKQ0Kew0KICAgIGdsb2JhbCAkcmVkaXMsJGNhY2hlX2V4cGlyZTsNCiAgICBpZighJHJlZGlzKXsNCiAgICAgICAgcmVxdWlyZV9vbmNlKERFREVJTkMuIi9yZWRpcy5jbGFzcy5waHAiKTsNCiAgICAgICAgaWYoIWlzc2V0KCRjYWNoZV9leHBpcmUpKSAkY2FjaGVfZXhwaXJlID0gNjA7ICAgICAgIC8v6buY6K6k57yT5a2YNjDliIbpkp8NCiAgICAgICAgJGV4cGlyZSA9ICRjYWNoZV9leHBpcmUgPyAkY2FjaGVfZXhwaXJlKjYwIDogMDsgIC8v57yT5a2Y6L+H5pyf5pe26Ze0DQogICAgICAgICRyZWRpc0NvbmZpZyA9IGFycmF5KA0KICAgICAgICAgICAgJ2hvc3QnPT4nMTI3LjAuMC4xJywNCiAgICAgICAgICAgICdwb3J0Jz0+NjM3OSwNCiAgICAgICAgICAgICdwYXNzd29yZCc9PicnLA0KICAgICAgICAgICAgJ3NlbGVjdCc9PjAsDQogICAgICAgICAgICAnZXhwaXJlJz0+JGV4cGlyZSwNCiAgICAgICAgICAgICdwcmVmaXgnPT4nZGVkZV8nLA0KICAgICAgICApOw0KICAgICAgICAkcmVkaXMgPSAkR0xPQkFMU1sncmVkaXMnXSA9IG5ldyBSZWRpc0hlbHBlcigkcmVkaXNDb25maWcpOw0KICAgIH0NCiAgICBpZigkY29udGVudCkNCiAgICAgICAgJHJlZGlzLT5zZXQoJHR5cGUuJ18nLiRpZC4nXycuJHBhZ2UsJGNvbnRlbnQpOw0KfQ0KDQpmdW5jdGlvbiBzZXRGaWxlQ2FjaGUoJHR5cGUsJGlkPTAsJHBhZ2U9MSwkY29udGVudD0nJykNCnsNCiAgICBoZWxwZXIoJ2NhY2hlJyk7DQogICAgZ2xvYmFsICRjYWNoZV9leHBpcmU7DQogICAgaWYoIWlzc2V0KCRjYWNoZV9leHBpcmUpKSAkY2FjaGVfZXhwaXJlID0gNjA7ICAgICAgIC8v6buY6K6k57yT5a2YNjDliIbpkp8NCiAgICAkZXhwaXJlID0gJGNhY2hlX2V4cGlyZSA/ICRjYWNoZV9leHBpcmUqNjAgOiAwOyAgLy/nvJPlrZjov4fmnJ/ml7bpl7QNCiAgICBpZigkY29udGVudCkNCiAgICAgICAgU2V0Q2FjaGUoJ3Jld3JpdGUnLCR0eXBlLidfJy4kaWQuJ18nLiRwYWdlLCRjb250ZW50LCRleHBpcmUqNjApOw0KfQ0KDQpmdW5jdGlvbiBkZWxSZWRpc0NhY2hlKCR0eXBlLCRpZCwkcGFnZT0xKQ0Kew0KICAgIGdsb2JhbCAkcmVkaXMsJGNhY2hlX2V4cGlyZTsNCiAgICBpZighJHJlZGlzKXsNCiAgICAgICAgcmVxdWlyZV9vbmNlKERFREVJTkMuIi9yZWRpcy5jbGFzcy5waHAiKTsNCiAgICAgICAgaWYoIWlzc2V0KCRjYWNoZV9leHBpcmUpKSAkY2FjaGVfZXhwaXJlID0gNjA7ICAgICAgIC8v6buY6K6k57yT5a2YNjDliIbpkp8NCiAgICAgICAgJGV4cGlyZSA9ICRjYWNoZV9leHBpcmUgPyAkY2FjaGVfZXhwaXJlKjYwIDogMDsgIC8v57yT5a2Y6L+H5pyf5pe26Ze0DQogICAgICAgICRyZWRpc0NvbmZpZyA9IGFycmF5KA0KICAgICAgICAgICAgJ2hvc3QnPT4nMTI3LjAuMC4xJywNCiAgICAgICAgICAgICdwb3J0Jz0+NjM3OSwNCiAgICAgICAgICAgICdwYXNzd29yZCc9PicnLA0KICAgICAgICAgICAgJ3NlbGVjdCc9PjAsDQogICAgICAgICAgICAnZXhwaXJlJz0+JGV4cGlyZSwNCiAgICAgICAgICAgICdwcmVmaXgnPT4nZGVkZV8nLA0KICAgICAgICApOw0KICAgICAgICAkcmVkaXMgPSAkR0xPQkFMU1sncmVkaXMnXSA9IG5ldyBSZWRpc0hlbHBlcigkcmVkaXNDb25maWcpOw0KICAgIH0NCiAgICAkcmVkaXMtPnJtKCR0eXBlLidfJy4kaWQuJ18nLiRwYWdlKTsNCn0NCg0KZnVuY3Rpb24gZGVsRmlsZUNhY2hlKCR0eXBlLCRpZCwkcGFnZT0xKQ0Kew0KICAgIGhlbHBlcignY2FjaGUnKTsNCiAgICBEZWxDYWNoZSgncmV3cml0ZScsJHR5cGUuJ18nLiRpZC4nXycuJHBhZ2UpOw0KfQ0KDQpmdW5jdGlvbiBkZWxXcml0ZUNhY2hlKCR0eXBlLCRpZCwkcGFnZT0xKQ0Kew0KICAgIGdsb2JhbCAkY2FjaGVfdHlwZTsNCiAgICBzd2l0Y2ggKCRjYWNoZV90eXBlKXsNCiAgICAgICAgY2FzZSAncmVkaXMnOg0KICAgICAgICAgICAgZGVsUmVkaXNDYWNoZSgkdHlwZSwkaWQsJHBhZ2UpOw0KICAgICAgICAgICAgYnJlYWs7DQogICAgICAgIGNhc2UgJ2ZpbGUnOg0KICAgICAgICAgICAgZGVsRmlsZUNhY2hlKCR0eXBlLCRpZCwkcGFnZSk7DQogICAgICAgICAgICBicmVhazsNCiAgICB9DQp9DQoNCmZ1bmN0aW9uIGRlbEFsbENhY2hlKCkNCnsNCiAgICBnbG9iYWwgJGNhY2hlX3R5cGU7DQogICAgc3dpdGNoICgkY2FjaGVfdHlwZSl7DQogICAgICAgIGNhc2UgJ3JlZGlzJzoNCiAgICAgICAgICAgIHJldHVybiBkZWxBbGxSZWRpc0NhY2hlKCk7DQogICAgICAgICAgICBicmVhazsNCiAgICAgICAgY2FzZSAnZmlsZSc6DQogICAgICAgICAgICByZXR1cm4gZGVsQWxsRmlsZUNhY2hlKCk7DQogICAgICAgICAgICBicmVhazsNCiAgICB9DQp9DQpmdW5jdGlvbiBkZWxBbGxSZWRpc0NhY2hlKCkNCnsNCiAgICBnbG9iYWwgJHJlZGlzLCRjYWNoZV9leHBpcmU7DQogICAgaWYoISRyZWRpcyl7DQogICAgICAgIHJlcXVpcmVfb25jZShERURFSU5DLiIvcmVkaXMuY2xhc3MucGhwIik7DQogICAgICAgIGlmKCFpc3NldCgkY2FjaGVfZXhwaXJlKSkgJGNhY2hlX2V4cGlyZSA9IDYwOyAgICAgICAvL+m7mOiupOe8k+WtmDYw5YiG6ZKfDQogICAgICAgICRleHBpcmUgPSAkY2FjaGVfZXhwaXJlID8gJGNhY2hlX2V4cGlyZSo2MCA6IDA7ICAvL+e8k+WtmOi/h+acn+aXtumXtA0KICAgICAgICAkcmVkaXNDb25maWcgPSBhcnJheSgNCiAgICAgICAgICAgICdob3N0Jz0+JzEyNy4wLjAuMScsDQogICAgICAgICAgICAncG9ydCc9PjYzNzksDQogICAgICAgICAgICAncGFzc3dvcmQnPT4nJywNCiAgICAgICAgICAgICdzZWxlY3QnPT4wLA0KICAgICAgICAgICAgJ2V4cGlyZSc9PiRleHBpcmUsDQogICAgICAgICAgICAncHJlZml4Jz0+J2RlZGVfJywNCiAgICAgICAgKTsNCiAgICAgICAgJHJlZGlzID0gJEdMT0JBTFNbJ3JlZGlzJ10gPSBuZXcgUmVkaXNIZWxwZXIoJHJlZGlzQ29uZmlnKTsNCiAgICB9DQogICAgcmV0dXJuICRyZWRpcy0+Y2xlYXIoKTsNCn0NCg0KZnVuY3Rpb24gZGVsQWxsRmlsZUNhY2hlKCRkaXI9JycpDQp7DQogICAgJGRpciA9IGVtcHR5KCRkaXIpID8gREVERURBVEEuIi9jYWNoZS9yZXdyaXRlIiA6ICRkaXI7DQogICAgaWYoIWlzX2RpcigkZGlyKSkgew0KICAgICAgICByZXR1cm4gTlVMTDsNCiAgICB9DQogICAgJGRoID0gb3BlbmRpcigkZGlyKTsNCiAgICB3aGlsZSgoJHJvdyA9IHJlYWRkaXIoJGRoKSkgIT09IGZhbHNlKSB7DQogICAgICAgIGlmKCRyb3cgPT0gJy4nIHx8ICRyb3cgPT0gJy4uJykgIGNvbnRpbnVlOw0KDQogICAgICAgIGlmKCFpc19kaXIoJGRpciAuICcvJyAuICRyb3cpKSB7DQogICAgICAgICAgICB1bmxpbmsoJGRpciAuICcvJyAuICRyb3cpOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgZGVsQWxsRmlsZUNhY2hlKCRkaXIgLiAnLycgLiAkcm93KTsgLy/pgJLlvZLmiorlrZDnm67lvZUv5a2Q5paH5Lu25Yig5LqGDQogICAgICAgIH0NCiAgICB9DQogICAgY2xvc2VkaXIoJGRoKTsNCiAgICBybWRpcigkZGlyKTsNCiAgICByZXR1cm4gdHJ1ZTsNCn0=
</file>
<file type='file' name='../include/redis.class.php'>

</file>
</modulefiles>
</module>
